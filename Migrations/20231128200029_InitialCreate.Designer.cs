// <auto-generated />
using EstAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EstAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231128200029_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EstAPI.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qtd")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TB_ITENS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categoria = 2,
                            Nome = "Lapis",
                            Qtd = 5
                        },
                        new
                        {
                            Id = 2,
                            Categoria = 3,
                            Nome = "Sabao",
                            Qtd = 4
                        },
                        new
                        {
                            Id = 3,
                            Categoria = 1,
                            Nome = "Carne",
                            Qtd = 7
                        },
                        new
                        {
                            Id = 4,
                            Categoria = 2,
                            Nome = "Caneta",
                            Qtd = 15
                        },
                        new
                        {
                            Id = 5,
                            Categoria = 3,
                            Nome = "Agua Sanitaria",
                            Qtd = 2
                        },
                        new
                        {
                            Id = 6,
                            Categoria = 1,
                            Nome = "Saco de Arroz",
                            Qtd = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
